source('~/Dropbox/bc/pooling/pooling.R')
source('~/Dropbox/bc/pooling/pooling.R')
as.list("01010")
source('~/Dropbox/bc/pooling/coding_pooling.R')
source('~/Dropbox/bc/pooling/unpool.R')
View(codes)
?read.csv
source('~/Dropbox/bc/pooling/unpool.R')
View(codes)
source('~/Dropbox/bc/pooling/unpool.R')
View(codes)
source('~/Dropbox/bc/pooling/unpool.R')
source('~/Dropbox/bc/pooling/unpool.R')
strsplit("01001","")
source('~/Dropbox/bc/pooling/unpool.R')
pools[,1]
hist(rowSums(pools))
hist(colSums(pools))
source('~/Dropbox/bc/pooling/unpool.R')
paste("A","B","C")
source('~/Dropbox/bc/pooling/unpool.R')
source('~/Dropbox/bc/pooling/unpool.R')
head(data)
source('~/Dropbox/bc/pooling/unpool.R')
source('~/Dropbox/bc/pooling/unpool.R')
head(reads)
length(unique(reads$position))
length(unique(reads$gene))
source('~/Dropbox/bc/pooling/unpool.R')
source('~/Dropbox/bc/pooling/unpool.R')
source('~/Dropbox/bc/pooling/unpool.R')
source('~/Dropbox/bc/pooling/unpool.R')
well.key <- resolve.pools(pools, contents)
source('~/Dropbox/bc/pooling/pooling.R')
well.key <- resolve.pools(pools, contents)
well.key <- resolve.pools(pools, trans)
head(well.key)
hist(colSums(trans))
hist(reads$count)
head(reads)
hist(reads$count, n=100)
hist(log(reads$count), n=100)
source('~/Dropbox/bc/pooling/unpool.R')
well.key
source('~/Dropbox/bc/pooling/unpool.R')
well.key(!is.na(well.key))
well.key[!is.na(well.key)]
dim(pool)
dim(pools)
dim(trans)
which(!is.na(well.key))
well.key[3572]
trans[,3572]
pools[,4453]
p <- pools[1:3,1:10]
p
t(p)
t(p) %*% c(1,0,1)
source('~/Dropbox/bc/pooling/decode.R')
find.closest(t(p), c(1,0,1))
dim(trans)
dim(trans)[2]
source('~/Dropbox/bc/pooling/decode.R')
find.closest(pools, trans[,1:20])
key <- find.closest(pools, trans)
sum(key$distance < 5)
hist(key$distance)
summary(as.factor(key$distance))
summary(reads)
length(unique(reads$position))
length(unique(reads$gene))
summary(as.factor(key$distance))
positions[key$distance == 0]
zero.pos <- positions[key$distance == 0]
length(zero.pos)
length(unique(zero.pos))
length(unique(reads$gene[reads$position %in% zero.pos]))
source('~/Dropbox/bc/pooling/summary.R')
source('~/Dropbox/bc/pooling/summary.R')
source('~/Dropbox/bc/pooling/summary.R')
source('~/Dropbox/bc/pooling/summary.R')
pos[1]
which(key$position == 3212)
head(key)
trans[,1]
pools[,35]
trans[,1] & pools[,35]
trans[,5] & pools[,74]
trans[,5] == pools[,74]
source('~/Dropbox/bc/pooling/decode.R')
key <- find.closest(pools, trans)
key <- find.closest(pools, trans[1,20])
key <- find.closest(pools, trans[,20])
key <- find.closest(pools, trans[,1:20])
key
length(trans)
312 % 100
mod(312, 100)
?mod
312 %% 100
source('~/Dropbox/bc/pooling/decode.R')
key <- find.closest(pools, trans, status=T)
summary(as.factor(key$distance))
source('~/Dropbox/bc/pooling/summary.R')
genes
unique(genes)
which.min(key$distance)
key[3572,]
trans[,3572]
pools[,4453]
View(key)
View(key)
View(trans)
View(pools)
View(data)
View(reads)
View(codes)
dim(pools)
head(key)
head(codes)
head(positions)
head(reads)
head(trans)
head(codes)
head(key)
source('~/Dropbox/bc/pooling/summary.R')
head(lookup)
source('~/Dropbox/bc/pooling/summary.R')
dim(lookup)
dim(reads[reads$position %in% pos])
dim(reads[reads$position %in% pos,])
dim(pos)
length(pos)
source('~/Dropbox/bc/pooling/summary.R')
head(lookup)
nrow(lookup)
source('~/Dropbox/bc/pooling/summary.R')
warnings()
head(lookup)
reads$gene[reads$position == 3212]
source('~/Dropbox/bc/pooling/summary.R')
head(lookup)
head(reads)
warnings()
source('~/Dropbox/bc/pooling/summary.R')
warnings()
lapply(reads, class)
lapply(lookup, class)
source('~/Dropbox/bc/pooling/summary.R')
warnings()
source('~/Dropbox/bc/pooling/summary.R')
warnings()
lapply(lookup, class)
source('~/Dropbox/bc/pooling/summary.R')
head(lookup)
source('~/Dropbox/bc/pooling/summary.R')
head(lookup)
source('~/Dropbox/bc/pooling/summary.R')
source('~/Dropbox/bc/pooling/summary.R')
head(reads)
head(codes)
strsplit(codes$code[1], "")[[1]]
library(devtools)
install.packages("devtools")
library(devtools)
install_github("hadley/dplyr")
install.packages("dplyr")
install.packages("pryr")
install_github("hadley/pryr")
